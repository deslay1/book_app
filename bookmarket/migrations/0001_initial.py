# Generated by Django 3.0.8 on 2020-08-02 20:47

import bookmarket.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(max_length=300, verbose_name='Enter below:')),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
                ('approved_comment', models.BooleanField(default=False)),
                ('comuser', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='comments', to=settings.AUTH_USER_MODEL)),
                ('dislikes', models.ManyToManyField(blank=True, related_name='comment_dislikes', to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank=True, related_name='comment_likes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=200)),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='replies', to='bookmarket.Comment')),
                ('dislikes', models.ManyToManyField(blank=True, related_name='reply_dislikes', to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank=True, related_name='reply_likes', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='replies', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('content', models.TextField(max_length=590, verbose_name='Description')),
                ('image', models.ImageField(blank=True, default='default.jpg', upload_to='post_pics', validators=[bookmarket.models.Post.validate_image], verbose_name='Image ')),
                ('image2', models.ImageField(blank=True, upload_to='post_pics', validators=[bookmarket.models.Post.validate_image], verbose_name='Image 2 (optional) ')),
                ('image3', models.ImageField(blank=True, upload_to='post_pics', validators=[bookmarket.models.Post.validate_image], verbose_name='Image 3 (optional) ')),
                ('price', models.DecimalField(decimal_places=0, default='0', max_digits=6, verbose_name='Price (kr)')),
                ('date_posted', models.DateTimeField(default=django.utils.timezone.now)),
                ('SellerOrBuyer', models.CharField(choices=[('Buyer', 'Buy'), ('Seller', 'Sell')], default=('Buyer', 'Buy'), max_length=50, verbose_name='Are you here to buy or sell? ')),
                ('condition', models.CharField(blank=True, choices=[('', 'Please choose if possible'), ('As New', 'As New'), ('Very Good', 'Very Good'), ('Acceptable', 'Acceptable'), ('Mixed', 'Mixed')], max_length=50, verbose_name='Condition of book(s) (optional)')),
                ('category', models.CharField(choices=[('A-sek', 'A-sek'), ('All', 'All'), ('D-sek', 'D-sek'), ('E-sek', 'E-sek'), ('F-sek', 'F-sek'), ('I-sek', 'I-sek'), ('M-sek', 'M-sek'), ('V-sek', 'V-sek'), ('W-sek', 'W-sek')], default=('A-sek', 'A-sek'), max_length=50, verbose_name='What group do you want to publish to?')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank=True, related_name='post_likes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='post',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='bookmarket.Post'),
        ),
    ]
